@inherits TestContext
@inject IBlogService BlogService
@inject NavigationManager NavigationManager


@code
{

	[Fact]
	public void CreateOnLoad_Test()
	{
		// Arrange
		const string expected = @"
				<h3>Create a New Blog Post</h3>
				<form>
					<div class=""form-group mb-2"">
						<label for=""title"">Title</label>
						<input id=""title"" class=""form-control valid"" value="""">
					</div>
					<div class=""form-group mb-2"">
						<label for=""url"">Url</label>
						<input id=""url"" class=""form-control valid"" value="""">
					</div>
					<div class=""form-control-file mb-2"">
						<label for=""image"">Image</label>
						<input id=""image"" type=""file"">
					</div>
					<div class=""form-group mb-2"">
						<label for=""description"">Description</label>
						<textarea id=""description"" class=""form-control valid"" value=""""></textarea>
					</div>
					<div class=""form-group mb-2"">
						<label for=""content"">Content</label>
						<textarea id=""content"" class=""form-control"" value=""""></textarea>
					</div>
					<div class=""form-group mb-2"">
						<label for=""preview"">Content Preview</label>
						<div id=""preview"" class=""form-group mb-2""></div>
					</div>
					<div class=""form-group mb-2"">
						<label for=""author"">Author</label>
						<input id=""author"" class=""form-control valid"" value="""">
					</div>
					<div class=""form-group mb-2"">
						<label for=""date"">Date Created</label>
						<input id=""date"" type=""date"" class=""form-control valid"" value:ignore>
					</div>
					<div class=""form-check mb-2"">
						<input id=""isPublished"" type=""checkbox"" class=""form-check-input valid"" checked="""">
						<label for=""isPublished"">Publish</label>
					</div>
					<button type=""submit"" class=""btn btn-primary"">Create</button>
				</form>
			";

		Services.AddScoped<IBlogService, BlogService>();

		// Act
		var cut = Render(@<Create/>);

		// Assert
		cut.MarkupMatches(expected);
	}


	[Fact]
	public void CreateSubmitWithInvalidData_Test()
	{
		// Arrange
		const string expected = @"
			<h3>Create a New Blog Post</h3>
			<form >
				<ul class=""validation-errors"">
					<li class=""validation-message"">The Url field is required.</li>
					<li class=""validation-message"">The Title field is required.</li>
					<li class=""validation-message"">The Description field is required.</li>
					<li class=""validation-message"">The Content field is required.</li>
					<li class=""validation-message"">The Author field is required.</li>
				</ul>
				<div class=""form-group mb-2"">
					<label for=""title"">Title</label>
					<input id=""title"" aria-invalid=""true"" class=""form-control invalid"" value=""""  >
					<div class=""validation-message"">The Title field is required.</div>
				</div>
				<div class=""form-group mb-2"">
					<label for=""url"">Url</label>
					<input id=""url"" aria-invalid=""true"" class=""form-control invalid"" value=""""  >
					<div class=""validation-message"">The Url field is required.</div>
				</div>
				<div class=""form-control-file mb-2"">
					<label for=""image"">Image</label>
					<input id=""image"" type=""file"" >
				</div>
				<div class=""form-group mb-2"">
					<label for=""description"">Description</label>
					<textarea id=""description"" aria-invalid=""true"" class=""form-control invalid"" value=""""  ></textarea>
					<div class=""validation-message"">The Description field is required.</div>
				</div>
				<div class=""form-group mb-2"">
					<label for=""content"">Content</label>
					<textarea id=""content"" class=""form-control"" value="""" ></textarea>
					<div class=""validation-message"">The Content field is required.</div>
				</div>
				<div class=""form-group mb-2"">
					<label for=""preview"">Content Preview</label>
					<div id=""preview"" class=""form-group mb-2""></div>
				</div>
				<div class=""form-group mb-2"">
					<label for=""author"">Author</label>
					<input id=""author"" aria-invalid=""true"" class=""form-control invalid"" value=""""  >
					<div class=""validation-message"">The Author field is required.</div>
				</div>
				<div class=""form-group mb-2"">
					<label for=""date"">Date Created</label>
					<input id=""date"" type=""date"" class=""form-control valid"" value:ignore  >
				</div>
				<div class=""form-check mb-2"">
					<input id=""isPublished"" type=""checkbox"" class=""form-check-input valid"" checked=""""  >
					<label for=""isPublished"">Publish</label>
				</div>
				<button type=""submit"" class=""btn btn-primary"">Create</button>
			</form>
		";
		Services.AddScoped<IBlogService, BlogService>();

		// Act
		var cut = Render(@<Create/>);
		cut.Find("button").Click();

		// Assert
		cut.MarkupMatches(expected);
	}
}